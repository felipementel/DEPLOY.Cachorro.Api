name: Docker Hub

on:
  push:
    paths:
      - 'src/**'
    branches:
      - main
  workflow_dispatch:

env:
  imageName: cachorro.api
  dotnetVersion: 7.x
  csprojFolder: ./src/DEPLOY.Cachorro.Api/DEPLOY.Cachorro.Api.csproj

jobs:
  build-and-sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: ${{ steps.cache-sonar-scanner.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"felipementel_DEPLOY.Cachorro.Api" /o:"felipementel" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.exclusions="**/Migrations/**"
          dotnet restore ${{ env.csprojFolder }}
          dotnet build ${{ env.csprojFolder }} --no-incremental
          dotnet-coverage collect 'dotnet test ./src/' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.1
        with:
          reports: 'coverage.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline;Cobertura'
          assemblyfilters: '+*'
          classfilters: '-*.Migrations.*'
          filefilters: '+*'
          verbosity: 'Verbose'
          title: 'Canal DEPLOY API Cachorro'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          toolpath: 'reportgeneratortool'

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: coveragereport

  docker:
    name: Push image to Registry
    needs: build-and-sonar
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Get-Version from csproj
        id: get-version
        shell: bash
        run: |
          version=$(sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p' ./src/DEPLOY.Cachorro.Api/DEPLOY.Cachorro.Api.csproj)
          echo "tag=$version" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            felipementel/$imageName
            ghcr.io/felipementel/deploy.$imageName

      - name: Build and push docker
        uses: docker/build-push-action@v5
        with:
          context: ./src/
          file: ./src/DEPLOY.Cachorro.Api/Dockerfile
          push: true
          tags: |
            felipementel/${{ env.imageName }}:latest
            felipementel/${{ env.imageName }}:${{ steps.get-version.outputs.tag }}

      - name: Build and push ghci
        uses: docker/build-push-action@v5
        with:
          context: ./src/
          file: ./src/DEPLOY.Cachorro.Api/Dockerfile
          push: true
          tags: |
            ghcr.io/felipementel/deploy.${{ env.imageName }}:latest
            ghcr.io/felipementel/deploy.${{ env.imageName }}:${{ steps.get-version.outputs.tag }}
          labels: |
            ${{ steps.meta.outputs.labels }}
