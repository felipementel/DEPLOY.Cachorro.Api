// <auto-generated />
using System;
using DEPLOY.Cachorro.Infra.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DEPLOY.Cachorro.Infra.Repository.Migrations.API
{
    [DbContext(typeof(CachorroDbContext))]
    partial class CachorroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DEPLOY.Cachorro.Domain.Aggregates.Cachorro.Entities.Cachorro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Adotado")
                        .HasColumnType("bit")
                        .HasColumnName("Adotado");

                    b.Property<DateTime?>("Atualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataAlteracao");

                    b.Property<DateTime>("Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Pelagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("Peso");

                    b.Property<long?>("TutorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Adotado");

                    b.HasIndex("TutorId");

                    b.HasIndex("Id", "Atualizacao");

                    b.ToTable("Cachorro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b7f75cc-bad0-4c5e-87ba-70178ab9fe13"),
                            Adotado = false,
                            Atualizacao = new DateTime(2024, 4, 8, 20, 3, 33, 613, DateTimeKind.Local).AddTicks(1770),
                            Cadastro = new DateTime(2024, 4, 8, 20, 3, 33, 613, DateTimeKind.Local).AddTicks(1739),
                            Nascimento = new DateTime(2024, 4, 8, 20, 3, 33, 613, DateTimeKind.Local).AddTicks(1776),
                            Nome = "Rex",
                            Pelagem = "Curto",
                            Peso = 10.3m
                        });
                });

            modelBuilder.Entity("DEPLOY.Cachorro.Domain.Aggregates.Tutor.Entities.Tutor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Atualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataAlteracao");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("Cadastro")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Atualizacao");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("DEPLOY.Cachorro.Domain.Aggregates.Cachorro.Entities.Cachorro", b =>
                {
                    b.HasOne("DEPLOY.Cachorro.Domain.Aggregates.Tutor.Entities.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.Navigation("Tutor");
                });
#pragma warning restore 612, 618
        }
    }
}
